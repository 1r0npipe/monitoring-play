version: '3.5'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  
  myapp:
    build: 
      dockerfile: Dockerfile
      context: .
      target: myappgolang
    container_name: mygolang
    ports:
      - "8080:8080"
      - "8081:8081"
    expose:
      - 8080
      - 8081
    network_mode: host

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prom:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=20h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - ADMIN_USER="admin"
      - ADMIN_PASSWORD="admin"
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"